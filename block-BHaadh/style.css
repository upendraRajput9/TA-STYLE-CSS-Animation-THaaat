/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
    display: block;
}
body {
    line-height: 1;
}
ol, ul {
    list-style: none;
}
blockquote, q {
    quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
    content: '';
    content: none;
}
table {
    border-collapse: collapse;
    border-spacing: 0;
}
/* custom */
body{
    font-family: 'Rajdhani', sans-serif;
}
a{
    text-decoration: none;
}
*,
*::before,
*::after{
    box-sizing: border-box;
}

/* variables */
.root{
    --Primary:rgb(89,191,194);
    --Secondary: white;
    --text-dark:rgb(40,62,125);
    --bg-light:rgb(213,229,229);
    --text-light:rgb(110,113,120);
}
/* general classes */
.text-center{
    text-align: center;
}
.flex-wrap{
    flex-wrap: wrap;
}
.margin{
    margin: 1rem;
}

.padding{
    padding: 1rem;
}
.container{
    max-width: 1200px;
    width: 100%;
    margin: 0 auto;
    padding: 0 32px;
   
}
.btn{
    display: inline-block;
    padding: 16px;
    color: var(---Secondary);
    background-color: var(---Primary);
}
/* flex */
.flex{
    display: flex;
    justify-content: space-between;
    align-items: center;
}
.justify-end{
    justify-content: end;
}
.flex-center{
    display: flex;
    justify-content: space-around;
    align-items: center;
}
.display-flex{
    display: flex;
}
.flex-50{
    flex: 0 1 50%;
}
.flex-45{
    flex: 0 1 45%;
}
.flex-40{
    flex: 0 1 40%;
}
/* animation */
@keyframes myAnimation{
    0%{
      transform: rotate3d(0,0,0,0);
    }
    100%{
        transform: rotate3d(0,1,0,360deg);
    }
}

/* constom */
body{
background-color: rgb(8, 0, 53);
}

h1{
    padding: 3rem 0;
    font-size: 3rem;
color: rgba(255, 255, 255, 0.767);
font-weight: 900;
}

.cube2D{
position: relative;
}
.cube2D:hover{
    animation-name: myAnimation;
    animation-timing-function: linear;
    animation-duration: 10s;
    animation-iteration-count: infinite;
}
.side{
    display: flex;
    justify-content: center;
    align-items: center;
    width: 10rem;
    height: 10rem;
    border: 1px solid rgb(161, 159, 159);
    position: absolute;
    color: rgb(171, 168, 235);
}
.top{
    background-color: rgba(0, 0, 0, 9);
    transform: rotate(-45deg) skew(15deg, 15deg);
}
.right{
    background-color: rgba(0, 0, 0, 8);
    transform: rotate(15deg) skew(15deg, 15deg) translate(-50%, 100%);
}
.left{
    background-color: rgba(0, 0, 0, 0.7);
    transform: rotate(-15deg) skew(-15deg, -15deg) translate(50%, 100%);
}


/* 3d */
.cube-3D {  
    height: 100%;
    /* position: absolute; */
    transform: translateZ(-100px);
    transform-style: preserve-3d;
    width: 100%;
    font-size: 3rem;
    color: rgb(171, 168, 235);
  }
.cube-3D:hover{
    animation-name: myAnimation;
    animation-timing-function: linear;
    animation-duration: 10s;
    animation-iteration-count: infinite;
}

  .cube-side {
    border: 2px solid white;
    height: 20rem;
    position: absolute;
    width: 20rem;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .front3D {
    transform: translateZ(100px);
    background-color: rgb(0, 0, 0,0.6);
  }
  .back3D {
    transform: rotateX(180deg) translateZ(100px);
    background-color: rgb(0, 0, 0,0.6);
  }
  .left3D {
    transform: rotateY(-90deg) translateZ(100px);
    background-color: rgb(0, 0, 0,0.6);
  }
  .right3D {
    transform: rotateY(90deg) translateZ(100px);
    background-color: rgb(0, 0, 0,0.6);
  }
  .top3D {
    transform: rotateX(90deg) translateZ(100px);
    background-color: rgb(0, 0, 0,0.6);
  }
  .bottom3D {
    transform: rotateX(-90deg) translateZ(100px);
    background-color: rgb(0, 0, 0,0.6);
  }